### Registraton
POST http://localhost:4444/auth/register/
Accept: application/json
Content-Type: application/json

{
  "email": "ram0973@gmail.com",
  "password": "123123",
  "fullName": "Kung-fu Panda",
  "avatarUrl": "http://yandex.ru/images/avatar.jpg"
}

### Login
POST http://localhost:4444/auth/login/
Accept: application/json
Content-Type: application/json

{
  "email": "ram0973@gmail.com",
  "password": "123123"
}

### Get me
GET http://localhost:4444/auth/me/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmZiNjE5ZWIwOTFlOWQyZWExODk5NjciLCJpYXQiOjE2NjA2NDQyNjUsImV4cCI6MTY2MzIzNjI2NX0.uDlKv3zChfZbUQPyWKuBMXifixGdSwXztlL4hDeDGe0
Accept: application/json
Content-Type: application/json

{
  "email": "ram0973@gmail.com",
  "password": "123123"
}

### Get /
GET http://localhost:4444/
Accept: application/json


#app.get('/posts/tags', PostController.getLastTags);
#app.get('/posts/:id', PostController.getOne);
#app.delete('/posts/:id', checkAuth, PostController.remove);
#//app.patch('/posts/:id',  checkAuth,  postCreateValidation,  handleValidationErrors,  PostController.update);

### Get post
GET http://localhost:4444/posts/62fb7208fed8a43536012d3b
Accept: application/json

### Get posts
GET http://localhost:4444/posts/
Accept: application/json

### Create post
POST http://localhost:4444/posts
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmZiNjE5ZWIwOTFlOWQyZWExODk5NjciLCJpYXQiOjE2NjA2NDQyNjUsImV4cCI6MTY2MzIzNjI2NX0.uDlKv3zChfZbUQPyWKuBMXifixGdSwXztlL4hDeDGe0
Accept: application/json
Content-Type: application/json

{
  "title": "The first post title",
  "text": "First Post text",
  "imageUrl": "/images/image/jpg",
  "tags": ["react", "node", "mern"]
}

### Delete post
DELETE http://localhost:4444/posts/62fb7208fed8a43536012d3b
Accept: application/json

### Patch post
PATCH http://localhost:4444/posts/62fb7b18d82e3d90e2793752
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmZiNjE5ZWIwOTFlOWQyZWExODk5NjciLCJpYXQiOjE2NjA2NDQyNjUsImV4cCI6MTY2MzIzNjI2NX0.uDlKv3zChfZbUQPyWKuBMXifixGdSwXztlL4hDeDGe0
Accept: application/json
Content-Type: application/json

{
  "title": "The first post changed",
  "text": "Post text changed 123",
  "imageUrl": "/images/image/jpg",
  "tags": ["react", "node", "mern", "js"]
}

### Load file
POST http://localhost:4444/upload/ HTTP/1.1
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmZiNjE5ZWIwOTFlOWQyZWExODk5NjciLCJpYXQiOjE2NjA2NDQyNjUsImV4cCI6MTY2MzIzNjI2NX0.uDlKv3zChfZbUQPyWKuBMXifixGdSwXztlL4hDeDGe0
Accept: application/json

--WebAppBoundary
Content-Disposition: form-data; name="image"; filename="image.svg"
Content-Type: application/svg+xml

< /home/ramil/Desktop/image.svg
--WebAppBoundary



############################################ OTHER EXAMPLES #####################################################

### Basic authorization.
GET https://httpbin.org/basic-auth/user/passwd
Authorization: Basic user passwd

### Basic authorization with variables.
GET https://httpbin.org/basic-auth/user/passwd
Authorization: Basic {{username}} {{password}}

### Digest authorization.
GET https://httpbin.org/digest-auth/realm/user/passwd
Authorization: Digest user passwd

### Digest authorization with variables.
GET https://httpbin.org/digest-auth/realm/user/passwd
Authorization: Digest {{username}} {{password}}

### Authorization by token, part 1. Retrieve and save token.
POST https://httpbin.org/post
Content-Type: application/json

{
  "token": "my-secret-token"
}

> {% client.global.set("auth_token", response.body.json.token); %}

### Authorization by token, part 2. Use token to authorize.
GET https://httpbin.org/headers
Authorization: Bearer {{auth_token}}

###